{
    "swagger": "2.0",
    "basePath": "/api/v2",
    "paths": {
        "/bandwidth/device/{deviceId}": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "boolean",
                    "default": false,
                    "in": "query",
                    "description": "Include Historical Interface Data for Device for Resellers",
                    "name": "historical"
                },
                {
                    "default": 300,
                    "type": "integer",
                    "required": true,
                    "in": "query",
                    "description": "Interval of Graph in Seconds",
                    "name": "step"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1630536763,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Device Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bandwidth"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Device."
                    }
                },
                "summary": "Returns RRDTool Xport based bandwidth data in JSON format",
                "operationId": "post_device_id_bandwidth_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/device/{deviceId}/image": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1630536763,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Device Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BandwidthImage"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Device."
                    }
                },
                "summary": "Returns RRDTool Graph based bandwidth in PNG format",
                "operationId": "post_device_id_bandwidth_image_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/service/{serviceId}": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Service to View",
                    "name": "serviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "default": 300,
                    "type": "integer",
                    "required": true,
                    "in": "query",
                    "description": "Interval of Graph in Seconds",
                    "name": "step"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1630536763,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Service Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bandwidth"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Service."
                    }
                },
                "summary": "Returns RRDTool Xport based bandwidth data in JSON format",
                "operationId": "post_service_id_bandwidth_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bandwidth/service/{serviceId}/image": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Service to View",
                    "name": "serviceId",
                    "type": "integer"
                },
                {
                    "default": "day",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "day",
                        "week",
                        "month",
                        "custom"
                    ],
                    "in": "query",
                    "description": "Preconfigured Time Periods for Graph Data",
                    "name": "period"
                },
                {
                    "default": "eth0",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "eth0",
                        "eth1",
                        "public",
                        "private",
                        "all"
                    ],
                    "in": "query",
                    "description": "Network Interface to use for Graph Data",
                    "name": "interface"
                },
                {
                    "type": "integer",
                    "default": 0,
                    "in": "query",
                    "description": "Start Time of Custom Time Period. (Unix Epoch Time)",
                    "name": "start"
                },
                {
                    "type": "integer",
                    "default": 1630536763,
                    "in": "query",
                    "description": "End Time of Custom Time Period (Unix Epoch Time)",
                    "name": "end"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Service Bandwidth Graph retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BandwidthImage"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve Bandwidth Graph for this Service."
                    }
                },
                "summary": "Returns RRDTool Graph based bandwidth in PNG format",
                "operationId": "post_service_id_bandwidth_image_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bandwidth"
                ]
            }
        },
        "/bare-metal-devices/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "201": {
                        "description": "Device provisioning started"
                    },
                    "400": {
                        "description": "Invalid device parameters."
                    }
                },
                "summary": "Deploy a new bare metal server",
                "operationId": "post_bare_metal_device_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Devices found successfuly",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BareMetalDevice"
                            }
                        }
                    }
                },
                "summary": "Return a list with all servers as bare metal",
                "operationId": "get_bare_metal_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            }
        },
        "/bare-metal-devices/{deviceId}": {
            "parameters": [
                {
                    "in": "query",
                    "description": "Id of the deployment to interact with",
                    "name": "deploymentId",
                    "type": "string"
                },
                {
                    "name": "deviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "201": {
                        "description": "Cancellation Started."
                    },
                    "204": {
                        "description": "Device Deleted"
                    },
                    "401": {
                        "description": "Not Allowed"
                    },
                    "404": {
                        "description": "Device Not Found"
                    }
                },
                "summary": "Cancel the specified bare metal device",
                "operationId": "delete_bare_metal_device_id_resource",
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployment Found",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    }
                },
                "summary": "Return bare metal device",
                "operationId": "get_bare_metal_device_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Device updated.",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid device parameters."
                    },
                    "404": {
                        "description": "Device Not Found"
                    }
                },
                "summary": "Update a bare metal device",
                "operationId": "put_bare_metal_device_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/BareMetalDeviceUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Bare Metal Devices"
                ]
            }
        },
        "/billing-info/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BillingInfo"
                            }
                        }
                    }
                },
                "summary": "Return a list with all Billing Info",
                "operationId": "get_billing_info_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "BillingInfo"
                ]
            }
        },
        "/contact/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Contact successfully created",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to create Contact"
                    }
                },
                "summary": "Create a new Contact",
                "operationId": "post_contact_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact-dump"
                            }
                        }
                    }
                },
                "summary": "Return a list with all Contacts",
                "operationId": "get_contact_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/password": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Recieve a request to reset password, and send a link by email with token",
                "operationId": "post_password_reset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordRequest"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Recieve a token and password, verify the user and reset your password",
                "operationId": "put_password_reset",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PasswordResponse"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/{contactId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Contact to View / Update",
                    "name": "contactId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "404": {
                        "description": "Contact not found."
                    },
                    "204": {
                        "description": "Contact successfully deleted."
                    }
                },
                "summary": "Delete a Contact",
                "operationId": "delete_contact_id_resource",
                "tags": [
                    "Contact"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    }
                },
                "summary": "Return details of a specific Contact",
                "operationId": "get_contact_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Contact successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/Contact-dump"
                        }
                    },
                    "400": {
                        "description": "Unable to update Contact Data."
                    }
                },
                "summary": "Edit a Contact",
                "operationId": "put_contact_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/contact/{contactId}/password": {
            "parameters": [
                {
                    "in": "path",
                    "description": "\"ID of Contact to change password\"",
                    "name": "contactId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "responses": {
                    "400": {
                        "description": "Invalid password for authentication."
                    },
                    "200": {
                        "description": "Password was changed."
                    }
                },
                "summary": "Change password for a Contact",
                "operationId": "put_password_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Password"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ]
            }
        },
        "/deploy/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Deployment Created",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    }
                },
                "summary": "Start a new deployment",
                "operationId": "post_deployment_resource",
                "parameters": [
                    {
                        "name": "deploymentName",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployments found successfuly",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deployment"
                            }
                        }
                    }
                },
                "summary": "Return a list with all client deployments",
                "operationId": "get_deployment_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/deploy/{deploymentId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Id of the deployment to interact with",
                    "name": "deploymentId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Deployment Deleted"
                    },
                    "401": {
                        "description": "Access to this Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    }
                },
                "summary": "Delete the specified deployment",
                "operationId": "delete_deployment_id_resource",
                "tags": [
                    "Deployment"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Deployment Started"
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    }
                },
                "summary": "Input a billing info id and script to process and finish a deployment",
                "operationId": "post_deployment_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeploymentStart"
                        }
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Deployment Found",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "401": {
                        "description": "Access to Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    }
                },
                "summary": "Return a dictionary with deployment information",
                "operationId": "get_deployment_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Server configuration added to Deployment",
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Your configuration have incompatible or unavailable options"
                    },
                    "401": {
                        "description": "Access to this Deployment not Allowed"
                    },
                    "404": {
                        "description": "Deployment Not Found"
                    }
                },
                "summary": "Receive product, quantity and options to be added on the deployment",
                "operationId": "put_deployment_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeploymentCustomization"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/device/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Device"
                            }
                        }
                    }
                },
                "summary": "Returns Active Devices and basic MetaData",
                "operationId": "get_device_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/ipmi/thresholds": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Devices IPMI Thresholds updated.",
                        "schema": {
                            "$ref": "#/definitions/DevicesIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to update IPMI Thresholds for this Device list."
                    }
                },
                "summary": "Updates IPMI thresholds for device list",
                "operationId": "put_ipmi_devices_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateDevicesIPMIThresholds"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    }
                },
                "summary": "Get all device tags for current client",
                "operationId": "get_client_device_tag_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags-order": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    }
                },
                "summary": "Get device tags order for current user",
                "operationId": "get_client_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Device tags order updated.",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    }
                },
                "summary": "Update device tags order for current user",
                "operationId": "put_client_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/tags-order/all": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    }
                },
                "summary": "Get all device tags order",
                "operationId": "get_all_device_tag_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                },
                "summary": "Returns detailed information for a Single Device",
                "operationId": "get_device_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Device MetaData was updated.",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "400": {
                        "description": "Unable to update Device MetaData."
                    }
                },
                "summary": "Updates Device MetaData for a Single Device",
                "operationId": "put_device_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/initial-creds": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve initial authentication credentials for",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device initial credentials.",
                        "schema": {
                            "$ref": "#/definitions/DeviceInitialCreds"
                        }
                    },
                    "400": {
                        "description": "Unable to get initial credentials for this Device."
                    }
                },
                "summary": "Returns initial password for the device",
                "operationId": "get_initial_creds_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve IPMI info.",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIInfo"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Thresholds for this Device."
                    }
                },
                "summary": "Returns IPMI info data",
                "operationId": "get_ipmi_info_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/login-data": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to retrieve IPMI Login data.",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Login data retrieved",
                        "schema": {
                            "$ref": "#/definitions/IPMILoginData"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Login data for this Device."
                    }
                },
                "summary": "Returns IPMI login credentials",
                "operationId": "get_ipmi_info_login_data_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/nat": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of a client Device",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "400": {
                        "description": "The request has problems. Revise it and try again."
                    },
                    "202": {
                        "description": "The request was accepted."
                    }
                },
                "summary": "Clear NAT rules based on the device client id",
                "description": "Returns success or error",
                "operationId": "get_device_ipminat_rule_resource",
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/thresholds": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to View",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to retrieve IPMI Thresholds for this Device."
                    }
                },
                "summary": "Returns IPMI thresholds data",
                "operationId": "get_ipmi_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Device IPMI Thresholds retrieved.",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    "400": {
                        "description": "Unable to update IPMI Thresholds for this Device."
                    }
                },
                "summary": "Updates IPMI thresholds data",
                "operationId": "put_ipmi_thresholds_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIThresholds"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/valid-login": {
            "parameters": [
                {
                    "required": true,
                    "in": "path",
                    "description": "ID of Device to check IPMI credentials",
                    "name": "deviceId",
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "IPMI credentials validated.",
                        "schema": {
                            "$ref": "#/definitions/IPMIValidLogin"
                        }
                    },
                    "400": {
                        "description": "Unable to validate IPMI credentials this Device."
                    }
                },
                "summary": "Returns if device have valid credentials for IPMI login",
                "operationId": "get_ipmi_valid_login_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/ipmi/whitelist/": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Device to put IP in Whitelist",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "400": {
                        "description": "The request has problems. Revise it and try again."
                    },
                    "202": {
                        "description": "The request was accepted."
                    }
                },
                "summary": "Add a public IP on IPMI whitelist",
                "description": "Returns IPMI public IP",
                "operationId": "post_device_ipmi_whitelist_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceIPMIWhitelistIP"
                        }
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/power": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DevicePower"
                        }
                    }
                },
                "summary": "Apply action to device power",
                "operationId": "post_power_resource",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "type": "string",
                        "pattern": "boot|reboot|shutdown",
                        "required": true,
                        "description": "Must be one of boot|reboot|shutdown"
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DevicePower"
                        }
                    }
                },
                "summary": "Get device's current power status",
                "operationId": "get_power_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/device/{deviceId}/tags": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Device to View / Update",
                    "name": "deviceId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    }
                },
                "summary": "Get device tags",
                "operationId": "get_device_tag_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Device tags updated.",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    }
                },
                "summary": "Update device tags",
                "operationId": "put_device_tag_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DeviceTag"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Device"
                ]
            }
        },
        "/domains/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DomainReturn"
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "201": {
                        "description": "Created."
                    }
                },
                "summary": "Create a new domain",
                "operationId": "post_domain_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DomainCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DomainReturn"
                            }
                        }
                    },
                    "403": {
                        "description": "You have not been granted permission."
                    }
                },
                "summary": "Return the domains of a client",
                "operationId": "get_domain_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/a-record": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "409": {
                        "description": "Record Already Exists"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    }
                },
                "summary": "Create a new A Record for given zone",
                "operationId": "post_a_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ARecordCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ARecordReturn"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return all A Records found for given zone",
                "operationId": "get_a_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/a-record/{recordId}": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    }
                },
                "summary": "Delete a single A Record value for given zone",
                "operationId": "delete_a_record_id_resource",
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return Single A Records found for given id",
                "operationId": "get_a_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    }
                },
                "summary": "Update an A Record for given zone",
                "operationId": "put_a_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ARecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/aaaa-record": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    }
                },
                "summary": "Create a new AAAA Record for given zone",
                "operationId": "post_aaaa_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AAAARecordReturn"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return all AAAA Records found for given zone",
                "operationId": "get_aaaa_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/aaaa-record/{recordId}": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    }
                },
                "summary": "Delete an AAAA Record for given zone",
                "operationId": "delete_aaaa_record_id_resource",
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return Single AAAA Records found for given id",
                "operationId": "get_aaaa_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleARecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    }
                },
                "summary": "Update an AAAA Record for given id",
                "operationId": "put_aaaa_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AAAARecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/mx-record": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleMXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "201": {
                        "description": "Created"
                    }
                },
                "summary": "Create a new MX Record for given zone",
                "operationId": "post_mx_record_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SingleMXRecordCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MXRecordReturn"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return all MX Records found for given zone",
                "operationId": "get_mx_record_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainID}/mx-record/{recordId}": {
            "parameters": [
                {
                    "name": "domainID",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "recordId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "204": {
                        "description": "Deleted"
                    }
                },
                "summary": "Delete an MX Record for given zone",
                "operationId": "delete_mx_record_id_resource",
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleMXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    }
                },
                "summary": "Return Single MX Records found for given id",
                "operationId": "get_mx_record_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SingleMXRecordReturn"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "You have not been granted permission"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "202": {
                        "description": "Updated"
                    }
                },
                "summary": "Update an MX Record for given zone",
                "operationId": "put_mx_record_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SingleMXRecordUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/domains/{domainId}": {
            "parameters": [
                {
                    "name": "domainId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "500": {
                        "description": "Error."
                    },
                    "404": {
                        "description": "Domain not found."
                    },
                    "403": {
                        "description": "You have not been granted permission."
                    },
                    "204": {
                        "description": "Deleted."
                    }
                },
                "summary": "Delete domain for given id",
                "operationId": "delete_domain_id_resource",
                "tags": [
                    "Domains"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/DomainReturn"
                        }
                    },
                    "404": {
                        "description": "Domain not found."
                    },
                    "403": {
                        "description": "You have not been granted permission."
                    }
                },
                "summary": "Return a domain for given id",
                "operationId": "get_domain_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Domains"
                ]
            }
        },
        "/inventory/locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Location data was found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to gather locations"
                    },
                    "404": {
                        "description": "Unable to find locations"
                    }
                },
                "summary": "Return sps facilities and locations",
                "operationId": "get_location_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/inventory/product": {
            "parameters": [
                {
                    "default": "MAIN",
                    "type": "string",
                    "enum": [
                        "MAIN",
                        "MASSIVESTORAGE",
                        "GPU",
                        "OUTLET",
                        "LANDING"
                    ],
                    "in": "query",
                    "description": "Filter products by location",
                    "name": "location"
                },
                {
                    "default": "facility",
                    "in": "query",
                    "description": "Get results grouped by 'city', 'facility', or 'flat'",
                    "name": "group_by",
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    }
                },
                "summary": "Return structured sps stock data, grouped by city or facility code for all products",
                "operationId": "get_stock_resource",
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/inventory/product/{productId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Product database ID",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Stock"
                        }
                    },
                    "404": {
                        "description": "Product with given id not found"
                    }
                },
                "summary": "Return a structured sps stock data, grouped by city or facility code for a single product",
                "operationId": "get_stock_by_product_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Inventory"
                ]
            }
        },
        "/order/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "A list of orders if the current user has them.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order-dump"
                            }
                        }
                    }
                },
                "summary": "Return a list with all Orders",
                "operationId": "get_order_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order"
                ]
            }
        },
        "/order/{orderId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "\"ID of Order to View\"",
                    "name": "orderId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "An specific order with its details.",
                        "schema": {
                            "$ref": "#/definitions/Order-dump"
                        }
                    },
                    "404": {
                        "description": "Order ID not found."
                    }
                },
                "summary": "Return details of a specific Order",
                "operationId": "get_order_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Order"
                ]
            }
        },
        "/permission/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Endpoint to get All Permissions",
                "operationId": "get_permission_all_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/contact": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionReturn"
                            }
                        }
                    }
                },
                "summary": "Endpoint to assign a new Permission to a Contact",
                "operationId": "post_permission_assign_contact_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/contact/{contactId}": {
            "parameters": [
                {
                    "name": "contactId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Endpoint to get Contact Permissions",
                "operationId": "get_permission_contact_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/permission/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Endpoint to get User Permissions",
                "operationId": "get_permission_user_resource",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/product/list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInfo"
                            }
                        }
                    }
                },
                "summary": "Return structured sps stock data in a list",
                "operationId": "get_product_list_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/options": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductOption"
                            }
                        }
                    }
                },
                "summary": "Return a mapping of Products and Options with pricing per-period",
                "operationId": "get_products_and_options_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/{productId}/operating-systems": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of the Product",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Option"
                            }
                        }
                    }
                },
                "summary": "Return List of operating systems found for a Product",
                "operationId": "get_product_operating_systems_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Product"
                ]
            }
        },
        "/product/{productId}/options": {
            "parameters": [
                {
                    "default": "upgrade",
                    "in": "query",
                    "description": "Get results grouped by 'upgrade' or without grouping.",
                    "name": "groupBy",
                    "type": "string"
                },
                {
                    "in": "path",
                    "description": "ID of the Product",
                    "name": "productId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Product data was found",
                        "schema": {
                            "$ref": "#/definitions/Options"
                        }
                    }
                },
                "summary": "Return List of Options found for a Product",
                "operationId": "get_product_option_resource",
                "tags": [
                    "Product"
                ]
            }
        },
        "/service/": {
            "parameters": [
                {
                    "default": "all",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "all",
                        "active",
                        "deactivated",
                        "pending",
                        "suspended",
                        "cancelled"
                    ],
                    "in": "query",
                    "description": "The current status of the service",
                    "name": "status"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service-dump"
                            }
                        }
                    },
                    "404": {
                        "description": "You don't own any services"
                    }
                },
                "summary": "Return a list of all account services",
                "operationId": "get_service_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/service/{serviceId}": {
            "parameters": [
                {
                    "name": "serviceId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Service-dump"
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Return a dictionary with data from a specific account service",
                "operationId": "get_service_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Service"
                ]
            }
        },
        "/ssh_key/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Public ssh key successfully added ",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to added public ssh key"
                    }
                },
                "summary": "Adds public ssh key",
                "operationId": "post_ssh_key_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SshKey"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "All Public ssh key successfully retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SshKeyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to get all public ssh key"
                    }
                },
                "summary": "Gets all public ssh key",
                "operationId": "get_ssh_key_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            }
        },
        "/ssh_key/{sshKeyId}": {
            "parameters": [
                {
                    "name": "sshKeyId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "403": {
                        "description": "Current user is not the owner."
                    },
                    "404": {
                        "description": "Public ssh key not found."
                    },
                    "200": {
                        "description": "Public ssh key successfully removed."
                    }
                },
                "summary": "Removes public ssh key",
                "operationId": "delete_ssh_key_id_resource",
                "tags": [
                    "SshKey"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Public ssh key successfully retrieved.",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "403": {
                        "description": "Current user is not the owner."
                    },
                    "404": {
                        "description": "Public ssh key not found."
                    }
                },
                "summary": "Get public ssh key",
                "operationId": "get_ssh_key_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Public ssh key successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/SshKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Unable to update public ssh key."
                    },
                    "403": {
                        "description": "Current user is not the owner."
                    },
                    "404": {
                        "description": "Public ssh key not found."
                    }
                },
                "summary": "Updates public ssh key",
                "operationId": "put_ssh_key_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SshKeyUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "SshKey"
                ]
            }
        },
        "/vlan/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Invalid VLAN creation parameter."
                    },
                    "201": {
                        "description": "VLAN created successfully."
                    }
                },
                "summary": "Create a new Private VLAN",
                "operationId": "post_vlan_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VlanCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "VLANs retrieved successfuly",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vlan"
                            }
                        }
                    }
                },
                "summary": "Return a list with all Private VLANs",
                "operationId": "get_vlan_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            }
        },
        "/vlan/{vlanId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Id of the VLAN to interact with",
                    "name": "vlanId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Error."
                    }
                },
                "summary": "Remove an existing Private VLAN",
                "operationId": "delete_vlan_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "VLAN Found",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "404": {
                        "description": "VLAN Not Found"
                    },
                    "401": {
                        "description": "Access to VLAN not Allowed"
                    }
                },
                "summary": "Fetch information from an existing Private VLAN",
                "operationId": "get_vlan_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/Vlan"
                        }
                    },
                    "400": {
                        "description": "Error."
                    }
                },
                "summary": "Update an existing Private VLAN, including adding and/or removing devices from it",
                "operationId": "put_vlan_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/VlanCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "VLAN"
                ]
            }
        },
        "/webhooks/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Webhook was created.",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Unable to create Webhook."
                    }
                },
                "summary": "Create a new Webhook for a Webhook Event",
                "operationId": "post_webhook_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WebhookCreate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Webhook"
                            }
                        }
                    }
                },
                "summary": "Returns your active Webhooks",
                "operationId": "get_webhook_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebhookEvent"
                            }
                        }
                    }
                },
                "summary": "Returns all available Webhook Events",
                "operationId": "get_webhook_event_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/trigger": {
            "parameters": [
                {
                    "in": "query",
                    "description": "The name of the webhook to trigger.",
                    "name": "webhookName",
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                },
                "summary": "Queues a webhook for the event script action that was triggered",
                "operationId": "post_event_script_action_trigger_resource",
                "tags": [
                    "Webhook"
                ]
            }
        },
        "/webhooks/{webhookId}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "ID of Webhook to View / Update",
                    "name": "webhookId",
                    "required": true,
                    "type": "integer"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Webhook was deleted."
                    }
                },
                "summary": "Deletes a single webhook",
                "operationId": "delete_webhook_id_resource",
                "tags": [
                    "Webhook"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    }
                },
                "summary": "Returns detailed information for a Single Webhook",
                "operationId": "get_webhook_id_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Webhook was updated.",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Unable to update Webhook."
                    }
                },
                "summary": "Updates a Single Webhook",
                "operationId": "put_webhook_id_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WebhookUpdate"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "Webhook"
                ]
            }
        }
    },
    "info": {
        "title": "Hivelocity API for Partners",
        "version": "2.0",
        "description": "Interact with Hivelocity"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-KEY"
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "tags": [
        {
            "name": "Bandwidth",
            "description": "Request RRDTool Based Bandwidth Data from a Resource."
        },
        {
            "name": "Bare Metal Devices",
            "description": "Endpoints to handle provisioning bare metal.  See all devices with the /devices endpoint."
        },
        {
            "name": "BillingInfo",
            "description": "Endpoints to manage Billing Info"
        },
        {
            "name": "Contact",
            "description": "Endpoints to manager Contacts"
        },
        {
            "name": "Device",
            "description": "Access to your Bare-Metal or Virtual Devices"
        },
        {
            "name": "Domains",
            "description": "Manage your DNS Domains"
        },
        {
            "name": "Inventory",
            "description": "Products Inventory Data"
        },
        {
            "name": "Order",
            "description": "Get Order and its details"
        },
        {
            "name": "Permission",
            "description": "Endpoints to manage Permissions"
        },
        {
            "name": "Product",
            "description": "Endpoints to manage Products"
        },
        {
            "name": "Deployment",
            "description": "Endpoints to handle your servers provisioning"
        },
        {
            "name": "Service",
            "description": "Service information"
        },
        {
            "name": "SshKey",
            "description": "Endpoints to manage SSH key."
        },
        {
            "name": "VLAN",
            "description": "Endpoints to manage VLANs"
        },
        {
            "name": "Webhook",
            "description": "Access and modify your Hivelocity webhooks."
        }
    ],
    "definitions": {
        "Bandwidth": {
            "properties": {
                "metadata": {
                    "type": "object"
                },
                "bandwidthData": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "interface": {
                    "type": "string"
                },
                "switchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BandwidthImage": {
            "properties": {
                "graphImage": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "switchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BareMetalDeviceCreate": {
            "required": [
                "hostname",
                "locationName",
                "osName",
                "productId"
            ],
            "properties": {
                "script": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "locationName": {
                    "type": "string"
                },
                "period": {
                    "type": "string",
                    "example": "hourly"
                },
                "vlanId": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BareMetalDevice": {
            "properties": {
                "script": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "orderId": {
                    "type": "integer"
                },
                "productName": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                },
                "locationName": {
                    "type": "string"
                },
                "powerStatus": {
                    "type": "string"
                },
                "period": {
                    "type": "string",
                    "example": "hourly"
                },
                "vlanId": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "integer"
                },
                "productId": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primaryIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BareMetalDeviceUpdate": {
            "required": [
                "hostname",
                "osName"
            ],
            "properties": {
                "script": {
                    "type": "string"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "BillingInfo": {
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "first": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "achAba": {
                    "type": "string"
                },
                "achBank": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "ccExpire": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                },
                "ccType": {
                    "type": "string"
                },
                "achAccount": {
                    "type": "string"
                },
                "achType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "ccNum": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContactCreate": {
            "required": [
                "active",
                "email",
                "fullName"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "default": "37195916f3e91a8cb2152af828537da4"
                },
                "email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Contact-dump": {
            "required": [
                "active",
                "email",
                "fullName"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                },
                "contactId": {
                    "type": "integer"
                },
                "clientId": {
                    "type": "integer"
                },
                "isClient": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContactUpdate": {
            "properties": {
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Password": {
            "required": [
                "newPassword",
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordRequest": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PasswordResponse": {
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Device": {
            "required": [
                "name"
            ],
            "properties": {
                "deviceId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "powerStatus": {
                    "type": "string"
                },
                "hasCancellation": {
                    "type": "boolean"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "isReload": {
                    "type": "boolean"
                },
                "monitorsUp": {
                    "type": "integer"
                },
                "monitorsTotal": {
                    "type": "integer"
                },
                "managedAlertsTotal": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "ipmiEnabled": {
                    "type": "boolean"
                },
                "displayedTags": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "object"
                },
                "primaryIp": {
                    "type": "string"
                },
                "ipmiAddress": {
                    "type": "string"
                },
                "serviceMonitors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "billingInfo": {
                    "type": "object"
                },
                "servicePlan": {
                    "type": "integer"
                },
                "lastInvoiceId": {
                    "type": "integer"
                },
                "selfProvisioning": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeviceUpdate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "A Descriptive Name for this Device"
                },
                "hostname": {
                    "type": "string",
                    "example": "server1.mydomain.com"
                }
            },
            "type": "object"
        },
        "DevicePower": {
            "properties": {
                "powerStatus": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "DeviceIPMIThresholds": {
            "required": [
                "thresholds"
            ],
            "properties": {
                "thresholds": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "UpdateDevicesIPMIThresholds": {
            "required": [
                "device_ids",
                "thresholds"
            ],
            "properties": {
                "device_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "thresholds": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DevicesIPMIThresholds": {
            "required": [
                "devices"
            ],
            "properties": {
                "devices": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeviceIPMIInfo": {
            "properties": {
                "info": {
                    "$ref": "#/definitions/IPMIInfo"
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPMISensor"
                    }
                }
            },
            "type": "object"
        },
        "IPMIInfo": {
            "properties": {
                "ipmiVersion": {
                    "type": "string"
                },
                "sdrRepositoryDevice": {
                    "type": "string"
                },
                "ipmbEventGenerator": {
                    "type": "string"
                },
                "fruInventoryDevice": {
                    "type": "string"
                },
                "bridge": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "deviceAvailable": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "deviceRevision": {
                    "type": "string"
                },
                "chassisDevice": {
                    "type": "string"
                },
                "sensorDevice": {
                    "type": "string"
                },
                "deviceSDRs": {
                    "type": "string"
                },
                "manufacturerId": {
                    "type": "string"
                },
                "ipmbEventReceiver": {
                    "type": "string"
                },
                "selDevice": {
                    "type": "string"
                },
                "auxFirmwareRevInfo": {
                    "type": "string"
                },
                "firmwareRevision": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPMISensor": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "sensorId": {
                    "type": "string"
                },
                "units": {
                    "type": "string"
                },
                "reading": {
                    "type": "number"
                },
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IPMILoginData": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "drivertype": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IPMIValidLogin": {
            "required": [
                "valid"
            ],
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeviceInitialCreds": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "lockerUrl": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceIPMIWhitelistIP": {
            "required": [
                "custIp"
            ],
            "properties": {
                "custIp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainCreate": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainReturn": {
            "required": [
                "directsTo",
                "domainId",
                "name"
            ],
            "properties": {
                "domainId": {
                    "type": "integer"
                },
                "summary": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "directsTo": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ARecordCreate": {
            "required": [
                "name",
                "ttl"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SingleARecordReturn": {
            "required": [
                "domainId",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "domainId": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ARecordReturn": {
            "required": [
                "addresses",
                "domainId",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordValue"
                    }
                },
                "domainId": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecordValue": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ARecordUpdate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AAAARecordCreate": {
            "required": [
                "address",
                "name",
                "ttl"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AAAARecordReturn": {
            "required": [
                "addresses",
                "domainId",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordValue"
                    }
                },
                "domainId": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AAAARecordUpdate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SingleMXRecordCreate": {
            "required": [
                "exchange",
                "name",
                "preference",
                "ttl"
            ],
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "preference": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SingleMXRecordReturn": {
            "required": [
                "domainId",
                "exchange",
                "id",
                "name",
                "preference",
                "ttl",
                "type"
            ],
            "properties": {
                "preference": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "domainId": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MXRecordReturn": {
            "required": [
                "domainId",
                "mx",
                "name",
                "ttl",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "mx": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MXValue"
                    }
                },
                "domainId": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MXValue": {
            "required": [
                "exchange",
                "id",
                "preference"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "exchange": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SingleMXRecordUpdate": {
            "required": [
                "exchange"
            ],
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "preference": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Inventory": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/Stock"
                }
            }
        },
        "Stock": {
            "properties": {
                "product_cpu_cores": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "quarterly_location_premium": {
                    "type": "number"
                },
                "product_hourly_price": {
                    "type": "number"
                },
                "product_quarterly_price": {
                    "type": "number"
                },
                "product_drive": {
                    "type": "string"
                },
                "product_bandwidth": {
                    "type": "string"
                },
                "product_original_price": {
                    "type": "number"
                },
                "product_biennial_price": {
                    "type": "number"
                },
                "product_monthly_price": {
                    "type": "number"
                },
                "product_memory": {
                    "type": "string"
                },
                "data_center": {
                    "type": "string"
                },
                "monthly_location_premium": {
                    "type": "number"
                },
                "edge": {
                    "type": "boolean"
                },
                "triennial_location_premium": {
                    "type": "number"
                },
                "product_semi_annually_price": {
                    "type": "number"
                },
                "product_display_price": {
                    "type": "number"
                },
                "annually_location_premium": {
                    "type": "number"
                },
                "hourly_location_premium": {
                    "type": "number"
                },
                "product_disabled_billing_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product_triennial_price": {
                    "type": "number"
                },
                "biennial_location_premium": {
                    "type": "number"
                },
                "core": {
                    "type": "boolean"
                },
                "stock": {
                    "type": "string"
                },
                "semi_annually_location_premium": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_on_sale": {
                    "type": "boolean"
                },
                "product_gpu": {
                    "type": "string"
                },
                "product_cpu": {
                    "type": "string"
                },
                "product_annually_price": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Location": {
            "properties": {
                "edge": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "core": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/CityStateCountry"
                }
            },
            "type": "object"
        },
        "CityStateCountry": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Order-dump": {
            "properties": {
                "info": {
                    "type": "object"
                },
                "owner": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Permission": {
            "required": [
                "permissions",
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "PermissionReturn": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductInfo": {
            "properties": {
                "product_cpu_cores": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "quarterly_location_premium": {
                    "type": "number"
                },
                "product_hourly_price": {
                    "type": "number"
                },
                "product_quarterly_price": {
                    "type": "number"
                },
                "product_drive": {
                    "type": "string"
                },
                "product_bandwidth": {
                    "type": "string"
                },
                "product_original_price": {
                    "type": "number"
                },
                "product_biennial_price": {
                    "type": "number"
                },
                "product_monthly_price": {
                    "type": "number"
                },
                "product_memory": {
                    "type": "string"
                },
                "data_center": {
                    "type": "string"
                },
                "monthly_location_premium": {
                    "type": "number"
                },
                "edge": {
                    "type": "boolean"
                },
                "triennial_location_premium": {
                    "type": "number"
                },
                "product_semi_annually_price": {
                    "type": "number"
                },
                "product_display_price": {
                    "type": "number"
                },
                "annually_location_premium": {
                    "type": "number"
                },
                "hourly_location_premium": {
                    "type": "number"
                },
                "product_disabled_billing_periods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product_triennial_price": {
                    "type": "number"
                },
                "biennial_location_premium": {
                    "type": "number"
                },
                "core": {
                    "type": "boolean"
                },
                "stock": {
                    "type": "string"
                },
                "semi_annually_location_premium": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_on_sale": {
                    "type": "boolean"
                },
                "product_gpu": {
                    "type": "string"
                },
                "product_cpu": {
                    "type": "string"
                },
                "product_annually_price": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Options": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/Option"
                }
            }
        },
        "Option": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "monthlyPrice": {
                    "type": "number"
                },
                "expressions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currency": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProductOption": {
            "properties": {
                "productId": {
                    "type": "integer"
                },
                "options": {
                    "type": "object"
                },
                "pricing": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Deployment": {
            "properties": {
                "startedProvisioning": {
                    "type": "boolean"
                },
                "deploymentId": {
                    "type": "integer"
                },
                "empty": {
                    "type": "boolean"
                },
                "orderNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "deploymentName": {
                    "type": "string"
                },
                "deploymentConfiguration": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "type": "object"
        },
        "DeploymentStart": {
            "required": [
                "billingInfo"
            ],
            "properties": {
                "script": {
                    "type": "string"
                },
                "billingInfo": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeploymentCustomization": {
            "required": [
                "hostnames",
                "operatingSystem",
                "productId"
            ],
            "properties": {
                "operatingSystem": {
                    "type": "string",
                    "description": "Operating System's Name or ID"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalNotes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productId": {
                    "type": "integer"
                },
                "publicSshKeyId": {
                    "type": "integer"
                },
                "locationCode": {
                    "type": "string",
                    "default": ""
                },
                "options": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "integer"
                    }
                },
                "quantity": {
                    "type": "integer",
                    "default": 1
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "must be one of ['monthly', 'quarterly', 'semi-annually', 'annually', 'biennial', 'triennial', 'hourly']",
                    "default": "monthly"
                }
            },
            "type": "object"
        },
        "Service-dump": {
            "properties": {
                "serviceId": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "billedPrice": {
                    "type": "number"
                },
                "billedPricePerPeriod": {
                    "type": "number"
                },
                "serviceCost": {
                    "type": "number"
                },
                "lastRenew": {
                    "type": "integer"
                },
                "renewDate": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "orderId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "discountType": {
                    "type": "string"
                },
                "discountedCost": {
                    "type": "number"
                },
                "serviceDiscount": {
                    "type": "number"
                },
                "serviceDiscountPerPeriod": {
                    "type": "number"
                },
                "ipAddress": {
                    "type": "string"
                },
                "cancelAfter": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "integer"
                },
                "serviceOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceOption"
                    }
                },
                "serviceDevices": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "childServices": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "productId": {
                    "type": "integer"
                },
                "productName": {
                    "type": "string"
                },
                "reseller": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "contractTerm": {
                    "type": "integer"
                },
                "billingInfoId": {
                    "type": "integer"
                },
                "colocationCharge": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ServiceOption": {
            "properties": {
                "serviceOptionId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "optionId": {
                    "type": "integer"
                },
                "upgradeName": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "invoiceHide": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SshKey": {
            "required": [
                "name",
                "publicKey"
            ],
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SshKeyResponse": {
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SshKeyUpdate": {
            "properties": {
                "publicKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VlanCreate": {
            "properties": {
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Vlan": {
            "properties": {
                "facilityCode": {
                    "type": "string"
                },
                "pendingDevices": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "vlanNum": {
                    "type": "integer"
                },
                "vlanTag": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "WebhookEvent": {
            "required": [
                "desc",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookCreate": {
            "required": [
                "event",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "My Webhook"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Webhook": {
            "required": [
                "event",
                "name",
                "url",
                "webhookId"
            ],
            "properties": {
                "webhookId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "WebhookUpdate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "My Webhook"
                },
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "headers": {
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}

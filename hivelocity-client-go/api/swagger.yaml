---
swagger: "2.0"
info:
  description: "Interact with Hivelocity"
  version: "2.0"
  title: "Hivelocity API for Partners"
basePath: "/api/v2"
tags:
- name: "Bandwidth"
  description: "Request RRDTool Based Bandwidth Data from a Resource."
- name: "Bare Metal Devices"
  description: "Endpoints to handle provisioning bare metal.  See all devices with\
    \ the /devices endpoint."
- name: "BillingInfo"
  description: "Endpoints to manage Billing Info"
- name: "Contact"
  description: "Endpoints to manager Contacts"
- name: "Device"
  description: "Access to your Bare-Metal or Virtual Devices"
- name: "Domains"
  description: "Manage your DNS Domains"
- name: "Inventory"
  description: "Products Inventory Data"
- name: "Order"
  description: "Get Order and its details"
- name: "Permission"
  description: "Endpoints to manage Permissions"
- name: "Product"
  description: "Endpoints to manage Products"
- name: "Deployment"
  description: "Endpoints to handle your servers provisioning"
- name: "Service"
  description: "Service information"
- name: "SshKey"
  description: "Endpoints to manage SSH key."
- name: "VLAN"
  description: "Endpoints to manage VLANs"
- name: "Webhook"
  description: "Access and modify your Hivelocity webhooks."
consumes:
- "application/json"
produces:
- "application/json"
security:
- apiKey: []
paths:
  /bandwidth/device/{deviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Returns RRDTool Xport based bandwidth data in JSON format"
      operationId: "post_device_id_bandwidth_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Preconfigured Time Periods for Graph Data"
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network Interface to use for Graph Data"
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "historical"
        in: "query"
        description: "Include Historical Interface Data for Device for Resellers"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Historical"
        x-optionalDataType: "Bool"
      - name: "step"
        in: "query"
        description: "Interval of Graph in Seconds"
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1630070096
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
  /bandwidth/device/{deviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Returns RRDTool Graph based bandwidth in PNG format"
      operationId: "post_device_id_bandwidth_image_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Preconfigured Time Periods for Graph Data"
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network Interface to use for Graph Data"
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1630070096
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
  /bandwidth/service/{serviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Returns RRDTool Xport based bandwidth data in JSON format"
      operationId: "post_service_id_bandwidth_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Preconfigured Time Periods for Graph Data"
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network Interface to use for Graph Data"
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "step"
        in: "query"
        description: "Interval of Graph in Seconds"
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1630070096
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
  /bandwidth/service/{serviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Returns RRDTool Graph based bandwidth in PNG format"
      operationId: "post_service_id_bandwidth_image_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Preconfigured Time Periods for Graph Data"
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network Interface to use for Graph Data"
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1630070096
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
  /bare-metal-devices/:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Return a list with all servers as bare metal"
      operationId: "get_bare_metal_device_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices found successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BareMetalDevice"
    post:
      tags:
      - "Bare Metal Devices"
      summary: "Deploy a new bare metal server"
      operationId: "post_bare_metal_device_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
  /bare-metal-devices/{deviceId}:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Return bare metal device"
      operationId: "get_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
    put:
      tags:
      - "Bare Metal Devices"
      summary: "Update a bare metal device"
      operationId: "put_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device updated."
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "400":
          description: "Invalid device parameters."
        "404":
          description: "Device Not Found"
    delete:
      tags:
      - "Bare Metal Devices"
      summary: "Cancel the specified bare metal device"
      operationId: "delete_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "201":
          description: "Cancellation Started."
        "204":
          description: "Device Deleted"
        "401":
          description: "Not Allowed"
        "404":
          description: "Device Not Found"
  /billing-info/:
    get:
      tags:
      - "BillingInfo"
      summary: "Return a list with all Billing Info"
      operationId: "get_billing_info_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillingInfo"
  /contact/:
    get:
      tags:
      - "Contact"
      summary: "Return a list with all Contacts"
      operationId: "get_contact_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact-dump"
    post:
      tags:
      - "Contact"
      summary: "Create a new Contact"
      operationId: "post_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Contact successfully created"
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to create Contact"
  /contact/password:
    post:
      tags:
      - "Contact"
      summary: "Recieve a request to reset password, and send a link by email with\
        \ token"
      operationId: "post_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordRequest"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
    put:
      tags:
      - "Contact"
      summary: "Recieve a token and password, verify the user and reset your password"
      operationId: "put_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordResponse"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
  /contact/{contactId}:
    get:
      tags:
      - "Contact"
      summary: "Return details of a specific Contact"
      operationId: "get_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Contact-dump"
    put:
      tags:
      - "Contact"
      summary: "Edit a Contact"
      operationId: "put_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Contact successfully updated."
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to update Contact Data."
    delete:
      tags:
      - "Contact"
      summary: "Delete a Contact"
      operationId: "delete_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "204":
          description: "Contact successfully deleted."
        "404":
          description: "Contact not found."
  /contact/{contactId}/password:
    put:
      tags:
      - "Contact"
      summary: "Change password for a Contact"
      operationId: "put_password_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "\"ID of Contact to change password\""
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Password"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Password was changed."
        "400":
          description: "Invalid password for authentication."
  /deploy/:
    get:
      tags:
      - "Deployment"
      summary: "Return a list with all client deployments"
      operationId: "get_deployment_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployments found successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Deployment"
    post:
      tags:
      - "Deployment"
      summary: "Start a new deployment"
      operationId: "post_deployment_resource"
      parameters:
      - name: "deploymentName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DeploymentName"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Deployment Created"
          schema:
            $ref: "#/definitions/Deployment"
  /deploy/{deploymentId}:
    get:
      tags:
      - "Deployment"
      summary: "Return a dictionary with deployment information"
      operationId: "get_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/Deployment"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
    post:
      tags:
      - "Deployment"
      summary: "Input a billing info id and script to process and finish a deployment"
      operationId: "post_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentStart"
        x-exportParamName: "Payload"
      responses:
        "201":
          description: "Deployment Started"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
    put:
      tags:
      - "Deployment"
      summary: "Receive product, quantity and options to be added on the deployment"
      operationId: "put_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentCustomization"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Server configuration added to Deployment"
          schema:
            $ref: "#/definitions/Deployment"
        "400":
          description: "Your configuration have incompatible or unavailable options"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
    delete:
      tags:
      - "Deployment"
      summary: "Delete the specified deployment"
      operationId: "delete_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      responses:
        "204":
          description: "Deployment Deleted"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
  /device/:
    get:
      tags:
      - "Device"
      summary: "Returns Active Devices and basic MetaData"
      operationId: "get_device_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Device"
  /device/ipmi/thresholds:
    put:
      tags:
      - "Device"
      summary: "Updates IPMI thresholds for device list"
      operationId: "put_ipmi_devices_thresholds_id_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UpdateDevicesIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices IPMI Thresholds updated."
          schema:
            $ref: "#/definitions/DevicesIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device list."
  /device/tags:
    get:
      tags:
      - "Device"
      summary: "Get all device tags for current client"
      operationId: "get_client_device_tag_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
  /device/tags-order:
    get:
      tags:
      - "Device"
      summary: "Get device tags order for current user"
      operationId: "get_client_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
    put:
      tags:
      - "Device"
      summary: "Update device tags order for current user"
      operationId: "put_client_device_tag_order_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags order updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
  /device/tags-order/all:
    get:
      tags:
      - "Device"
      summary: "Get all device tags order"
      operationId: "get_all_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
  /device/{deviceId}:
    get:
      tags:
      - "Device"
      summary: "Returns detailed information for a Single Device"
      operationId: "get_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Device"
    put:
      tags:
      - "Device"
      summary: "Updates Device MetaData for a Single Device"
      operationId: "put_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device MetaData was updated."
          schema:
            $ref: "#/definitions/Device"
        "400":
          description: "Unable to update Device MetaData."
  /device/{deviceId}/initial-creds:
    get:
      tags:
      - "Device"
      summary: "Returns initial password for the device"
      operationId: "get_initial_creds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve initial authentication credentials\
          \ for"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device initial credentials."
          schema:
            $ref: "#/definitions/DeviceInitialCreds"
        "400":
          description: "Unable to get initial credentials for this Device."
  /device/{deviceId}/ipmi:
    get:
      tags:
      - "Device"
      summary: "Returns IPMI info data"
      operationId: "get_ipmi_info_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI info."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved"
          schema:
            $ref: "#/definitions/DeviceIPMIInfo"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
  /device/{deviceId}/ipmi/login-data:
    get:
      tags:
      - "Device"
      summary: "Returns IPMI login credentials"
      operationId: "get_ipmi_info_login_data_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI Login data."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Login data retrieved"
          schema:
            $ref: "#/definitions/IPMILoginData"
        "400":
          description: "Unable to retrieve IPMI Login data for this Device."
  /device/{deviceId}/ipmi/nat:
    get:
      tags:
      - "Device"
      summary: "Clear NAT rules based on the device client id"
      description: "Returns success or error"
      operationId: "get_device_ipminat_rule_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of a client Device"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "202":
          description: "The request was accepted."
        "400":
          description: "The request has problems. Revise it and try again."
  /device/{deviceId}/ipmi/thresholds:
    get:
      tags:
      - "Device"
      summary: "Returns IPMI thresholds data"
      operationId: "get_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
    put:
      tags:
      - "Device"
      summary: "Updates IPMI thresholds data"
      operationId: "put_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device."
  /device/{deviceId}/ipmi/valid-login:
    get:
      tags:
      - "Device"
      summary: "Returns if device have valid credentials for IPMI login"
      operationId: "get_ipmi_valid_login_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to check IPMI credentials"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "IPMI credentials validated."
          schema:
            $ref: "#/definitions/IPMIValidLogin"
        "400":
          description: "Unable to validate IPMI credentials this Device."
  /device/{deviceId}/ipmi/whitelist/:
    post:
      tags:
      - "Device"
      summary: "Add a public IP on IPMI whitelist"
      description: "Returns IPMI public IP"
      operationId: "post_device_ipmi_whitelist_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of the Device to put IP in Whitelist"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIWhitelistIP"
        x-exportParamName: "Payload"
      responses:
        "202":
          description: "The request was accepted."
        "400":
          description: "The request has problems. Revise it and try again."
  /device/{deviceId}/power:
    get:
      tags:
      - "Device"
      summary: "Get device's current power status"
      operationId: "get_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
    post:
      tags:
      - "Device"
      summary: "Apply action to device power"
      operationId: "post_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "action"
        in: "query"
        description: "Must be one of boot|reboot|shutdown"
        required: true
        type: "string"
        pattern: "boot|reboot|shutdown"
        x-exportParamName: "Action"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
  /device/{deviceId}/tags:
    get:
      tags:
      - "Device"
      summary: "Get device tags"
      operationId: "get_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
    put:
      tags:
      - "Device"
      summary: "Update device tags"
      operationId: "put_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
  /domains/:
    get:
      tags:
      - "Domains"
      summary: "Return the domains of a client"
      operationId: "get_domain_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DomainReturn"
        "403":
          description: "You have not been granted permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new domain"
      operationId: "post_domain_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DomainCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DomainReturn"
        "201":
          description: "Created."
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission."
  /domains/{domainID}/a-record:
    get:
      tags:
      - "Domains"
      summary: "Return all A Records found for given zone"
      operationId: "get_a_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ARecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    post:
      tags:
      - "Domains"
      summary: "Create a new A Record for given zone"
      operationId: "post_a_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "201":
          description: "Created"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
        "409":
          description: "Record Already Exists"
  /domains/{domainID}/a-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single A Records found for given id"
      operationId: "get_a_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    put:
      tags:
      - "Domains"
      summary: "Update an A Record for given zone"
      operationId: "put_a_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "202":
          description: "Updated"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    delete:
      tags:
      - "Domains"
      summary: "Delete a single A Record value for given zone"
      operationId: "delete_a_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "204":
          description: "Deleted"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
  /domains/{domainID}/aaaa-record:
    get:
      tags:
      - "Domains"
      summary: "Return all AAAA Records found for given zone"
      operationId: "get_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AAAARecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    post:
      tags:
      - "Domains"
      summary: "Create a new AAAA Record for given zone"
      operationId: "post_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "201":
          description: "Created"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
  /domains/{domainID}/aaaa-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single AAAA Records found for given id"
      operationId: "get_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    put:
      tags:
      - "Domains"
      summary: "Update an AAAA Record for given id"
      operationId: "put_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleARecordReturn"
        "202":
          description: "Updated"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "Domains"
      summary: "Delete an AAAA Record for given zone"
      operationId: "delete_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "204":
          description: "Deleted"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
  /domains/{domainID}/mx-record:
    get:
      tags:
      - "Domains"
      summary: "Return all MX Records found for given zone"
      operationId: "get_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MXRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    post:
      tags:
      - "Domains"
      summary: "Create a new MX Record for given zone"
      operationId: "post_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SingleMXRecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleMXRecordReturn"
        "201":
          description: "Created"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
  /domains/{domainID}/mx-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single MX Records found for given id"
      operationId: "get_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleMXRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    put:
      tags:
      - "Domains"
      summary: "Update an MX Record for given zone"
      operationId: "put_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SingleMXRecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SingleMXRecordReturn"
        "202":
          description: "Updated"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
    delete:
      tags:
      - "Domains"
      summary: "Delete an MX Record for given zone"
      operationId: "delete_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "204":
          description: "Deleted"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission"
        "404":
          description: "Not found"
  /domains/{domainId}:
    get:
      tags:
      - "Domains"
      summary: "Return a domain for given id"
      operationId: "get_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/DomainReturn"
        "403":
          description: "You have not been granted permission."
        "404":
          description: "Domain not found."
    delete:
      tags:
      - "Domains"
      summary: "Delete domain for given id"
      operationId: "delete_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      responses:
        "204":
          description: "Deleted."
        "403":
          description: "You have not been granted permission."
        "404":
          description: "Domain not found."
        "500":
          description: "Error."
  /inventory/locations:
    get:
      tags:
      - "Inventory"
      summary: "Return sps facilities and locations"
      operationId: "get_location_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Location data was found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Location"
        "404":
          description: "Unable to find locations"
        "500":
          description: "Unable to gather locations"
  /inventory/product:
    get:
      tags:
      - "Inventory"
      summary: "Return structured sps stock data, grouped by city or facility code\
        \ for all products"
      operationId: "get_stock_resource"
      parameters:
      - name: "location"
        in: "query"
        description: "Filter products by location"
        required: false
        type: "string"
        default: "MAIN"
        enum:
        - "MAIN"
        - "MASSIVESTORAGE"
        - "GPU"
        - "OUTLET"
        - "LANDING"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "group_by"
        in: "query"
        description: "Get results grouped by 'city', 'facility', or 'flat'"
        required: false
        type: "string"
        default: "facility"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Inventory"
  /inventory/product/{productId}:
    get:
      tags:
      - "Inventory"
      summary: "Return a structured sps stock data, grouped by city or facility code\
        \ for a single product"
      operationId: "get_stock_by_product_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "Product database ID"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Stock"
        "404":
          description: "Product with given id not found"
  /order/:
    get:
      tags:
      - "Order"
      summary: "Return a list with all Orders"
      operationId: "get_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A list of orders if the current user has them."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order-dump"
  /order/{orderId}:
    get:
      tags:
      - "Order"
      summary: "Return details of a specific Order"
      operationId: "get_order_id_resource"
      parameters:
      - name: "orderId"
        in: "path"
        description: "\"ID of Order to View\""
        required: true
        type: "integer"
        x-exportParamName: "OrderId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "An specific order with its details."
          schema:
            $ref: "#/definitions/Order-dump"
        "404":
          description: "Order ID not found."
  /permission/:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get All Permissions"
      operationId: "get_permission_all_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
  /permission/contact:
    post:
      tags:
      - "Permission"
      summary: "Endpoint to assign a new Permission to a Contact"
      operationId: "post_permission_assign_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Permission"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PermissionReturn"
  /permission/contact/{contactId}:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get Contact Permissions"
      operationId: "get_permission_contact_resource"
      parameters:
      - name: "contactId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "200":
          description: "Success"
  /permission/user:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get User Permissions"
      operationId: "get_permission_user_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
  /product/list:
    get:
      tags:
      - "Product"
      summary: "Return structured sps stock data in a list"
      operationId: "get_product_list_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductInfo"
  /product/options:
    get:
      tags:
      - "Product"
      summary: "Return a mapping of Products and Options with pricing per-period"
      operationId: "get_products_and_options_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOption"
  /product/{productId}/operating-systems:
    get:
      tags:
      - "Product"
      summary: "Return List of operating systems found for a Product"
      operationId: "get_product_operating_systems_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Option"
  /product/{productId}/options:
    get:
      tags:
      - "Product"
      summary: "Return List of Options found for a Product"
      operationId: "get_product_option_resource"
      parameters:
      - name: "groupBy"
        in: "query"
        description: "Get results grouped by 'upgrade' or without grouping."
        required: false
        type: "string"
        default: "upgrade"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Options"
  /service/:
    get:
      tags:
      - "Service"
      summary: "Return a list of all account services"
      operationId: "get_service_resource"
      parameters:
      - name: "status"
        in: "query"
        description: "The current status of the service"
        required: true
        type: "string"
        default: "all"
        enum:
        - "all"
        - "active"
        - "deactivated"
        - "pending"
        - "suspended"
        - "cancelled"
        x-exportParamName: "Status"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service-dump"
        "404":
          description: "You don't own any services"
  /service/{serviceId}:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with data from a specific account service"
      operationId: "get_service_id_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Service-dump"
        "404":
          description: "Service not found"
  /ssh_key/:
    get:
      tags:
      - "SshKey"
      summary: "Gets all public ssh key"
      operationId: "get_ssh_key_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Public ssh key successfully retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to get all public ssh key"
    post:
      tags:
      - "SshKey"
      summary: "Adds public ssh key"
      operationId: "post_ssh_key_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKey"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Public ssh key successfully added "
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to added public ssh key"
  /ssh_key/{sshKeyId}:
    get:
      tags:
      - "SshKey"
      summary: "Get public ssh key"
      operationId: "get_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully retrieved."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "403":
          description: "Current user is not the owner."
        "404":
          description: "Public ssh key not found."
    put:
      tags:
      - "SshKey"
      summary: "Updates public ssh key"
      operationId: "put_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKeyUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully updated."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to update public ssh key."
        "403":
          description: "Current user is not the owner."
        "404":
          description: "Public ssh key not found."
    delete:
      tags:
      - "SshKey"
      summary: "Removes public ssh key"
      operationId: "delete_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      responses:
        "200":
          description: "Public ssh key successfully removed."
        "403":
          description: "Current user is not the owner."
        "404":
          description: "Public ssh key not found."
  /vlan/:
    get:
      tags:
      - "VLAN"
      summary: "Return a list with all Private VLANs"
      operationId: "get_vlan_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLANs retrieved successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Vlan"
    post:
      tags:
      - "VLAN"
      summary: "Create a new Private VLAN"
      operationId: "post_vlan_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Vlan"
        "201":
          description: "VLAN created successfully."
        "400":
          description: "Invalid VLAN creation parameter."
  /vlan/{vlanId}:
    get:
      tags:
      - "VLAN"
      summary: "Fetch information from an existing Private VLAN"
      operationId: "get_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLAN Found"
          schema:
            $ref: "#/definitions/Vlan"
        "401":
          description: "Access to VLAN not Allowed"
        "404":
          description: "VLAN Not Found"
    put:
      tags:
      - "VLAN"
      summary: "Update an existing Private VLAN, including adding and/or removing\
        \ devices from it"
      operationId: "put_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/Vlan"
        "400":
          description: "Error."
    delete:
      tags:
      - "VLAN"
      summary: "Remove an existing Private VLAN"
      operationId: "delete_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/Vlan"
        "400":
          description: "Error."
  /webhooks/:
    get:
      tags:
      - "Webhook"
      summary: "Returns your active Webhooks"
      operationId: "get_webhook_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Webhook"
    post:
      tags:
      - "Webhook"
      summary: "Create a new Webhook for a Webhook Event"
      operationId: "post_webhook_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was created."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to create Webhook."
  /webhooks/events:
    get:
      tags:
      - "Webhook"
      summary: "Returns all available Webhook Events"
      operationId: "get_webhook_event_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/WebhookEvent"
  /webhooks/trigger:
    post:
      tags:
      - "Webhook"
      summary: "Queues a webhook for the event script action that was triggered"
      operationId: "post_event_script_action_trigger_resource"
      parameters:
      - name: "webhookName"
        in: "query"
        description: "The name of the webhook to trigger."
        required: false
        type: "string"
        x-exportParamName: "WebhookName"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
  /webhooks/{webhookId}:
    get:
      tags:
      - "Webhook"
      summary: "Returns detailed information for a Single Webhook"
      operationId: "get_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Webhook"
    put:
      tags:
      - "Webhook"
      summary: "Updates a Single Webhook"
      operationId: "put_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was updated."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to update Webhook."
    delete:
      tags:
      - "Webhook"
      summary: "Deletes a single webhook"
      operationId: "delete_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      responses:
        "204":
          description: "Webhook was deleted."
securityDefinitions:
  apiKey:
    type: "apiKey"
    name: "X-API-KEY"
    in: "header"
definitions:
  Bandwidth:
    type: "object"
    properties:
      metadata:
        type: "object"
        properties: {}
      bandwidthData:
        type: "array"
        items:
          type: "array"
          items:
            type: "number"
      interface:
        type: "string"
      switchId:
        type: "string"
    example:
      metadata: "{}"
      switchId: "switchId"
      bandwidthData:
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      interface: "interface"
  BandwidthImage:
    type: "object"
    properties:
      graphImage:
        type: "string"
      interface:
        type: "string"
      switchId:
        type: "string"
    example:
      switchId: "switchId"
      graphImage: "graphImage"
      interface: "interface"
  BareMetalDeviceCreate:
    type: "object"
    required:
    - "hostname"
    - "locationName"
    - "osName"
    - "productId"
    properties:
      period:
        type: "string"
        example: "hourly"
      productId:
        type: "integer"
      hostname:
        type: "string"
      script:
        type: "string"
      locationName:
        type: "string"
      vlanId:
        type: "integer"
      publicSshKeyId:
        type: "integer"
      osName:
        type: "string"
    example:
      period: "hourly"
      hostname: "hostname"
      locationName: "locationName"
      productId: 0
      vlanId: 6
      osName: "osName"
      script: "script"
      publicSshKeyId: 1
  BareMetalDevice:
    type: "object"
    properties:
      period:
        type: "string"
        example: "hourly"
      orderId:
        type: "integer"
      productId:
        type: "integer"
      hostname:
        type: "string"
      powerStatus:
        type: "string"
      locationName:
        type: "string"
      script:
        type: "string"
      vlanId:
        type: "integer"
      serviceId:
        type: "integer"
      primaryIp:
        type: "string"
      deviceId:
        type: "integer"
      tags:
        type: "array"
        items:
          type: "string"
      publicSshKeyId:
        type: "integer"
      osName:
        type: "string"
      productName:
        type: "string"
    example:
      period: "hourly"
      locationName: "locationName"
      productId: 6
      orderId: 0
      vlanId: 1
      osName: "osName"
      deviceId: 5
      script: "script"
      productName: "productName"
      tags:
      - "tags"
      - "tags"
      publicSshKeyId: 2
      hostname: "hostname"
      powerStatus: "powerStatus"
      primaryIp: "primaryIp"
      serviceId: 5
  BareMetalDeviceUpdate:
    type: "object"
    properties:
      hostname:
        type: "string"
      script:
        type: "string"
      publicSshKeyId:
        type: "integer"
      tags:
        type: "array"
        items:
          type: "string"
      osName:
        type: "string"
    example:
      hostname: "hostname"
      osName: "osName"
      script: "script"
      publicSshKeyId: 0
      tags:
      - "tags"
      - "tags"
  BillingInfo:
    type: "object"
    properties:
      country:
        type: "string"
      achAba:
        type: "string"
      zip:
        type: "string"
      achType:
        type: "string"
      clientId:
        type: "integer"
      phone:
        type: "string"
      achBank:
        type: "string"
      paymentType:
        type: "string"
      id:
        type: "integer"
      achAccount:
        type: "string"
      company:
        type: "string"
      status:
        type: "integer"
      first:
        type: "string"
      ccExpire:
        type: "string"
      last:
        type: "string"
      ccNum:
        type: "string"
      state:
        type: "string"
      email:
        type: "string"
      city:
        type: "string"
      ccType:
        type: "string"
      address:
        type: "string"
    example:
      zip: "zip"
      country: "country"
      clientId: 0
      address: "address"
      last: "last"
      city: "city"
      achBank: "achBank"
      ccNum: "ccNum"
      achType: "achType"
      paymentType: "paymentType"
      ccType: "ccType"
      achAba: "achAba"
      ccExpire: "ccExpire"
      phone: "phone"
      achAccount: "achAccount"
      company: "company"
      id: 6
      state: "state"
      first: "first"
      email: "email"
      status: 1
  ContactCreate:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      email:
        type: "string"
      fullName:
        type: "string"
      active:
        type: "integer"
      password:
        type: "string"
        default: "b0e8a46ff8ad92bd67dafa8365d871b8"
      description:
        type: "string"
      phone:
        type: "string"
    example:
      password: "b0e8a46ff8ad92bd67dafa8365d871b8"
      phone: "phone"
      fullName: "fullName"
      active: 0
      description: "description"
      email: "email"
  Contact-dump:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      isClient:
        type: "boolean"
      clientId:
        type: "integer"
      email:
        type: "string"
      fullName:
        type: "string"
      active:
        type: "integer"
      contactId:
        type: "integer"
      description:
        type: "string"
      phone:
        type: "string"
    example:
      clientId: 0
      contactId: 1
      phone: "phone"
      fullName: "fullName"
      active: 6
      description: "description"
      isClient: true
      email: "email"
  ContactUpdate:
    type: "object"
    properties:
      description:
        type: "string"
      email:
        type: "string"
      fullName:
        type: "string"
      active:
        type: "integer"
      phone:
        type: "string"
    example:
      phone: "phone"
      description: "description"
      fullName: "fullName"
      active: 0
      email: "email"
  Password:
    type: "object"
    required:
    - "newPassword"
    - "password"
    properties:
      newPassword:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      newPassword: "newPassword"
  PasswordResponse:
    type: "object"
    required:
    - "password"
    - "token"
    properties:
      token:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      token: "token"
  PasswordRequest:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
    example:
      email: "email"
  Device:
    type: "object"
    required:
    - "name"
    properties:
      deviceId:
        type: "integer"
      name:
        type: "string"
      status:
        type: "string"
      deviceType:
        type: "string"
      powerStatus:
        type: "string"
      hasCancellation:
        type: "boolean"
      isManaged:
        type: "boolean"
      isReload:
        type: "boolean"
      monitorsUp:
        type: "integer"
      monitorsTotal:
        type: "integer"
      managedAlertsTotal:
        type: "integer"
      hostname:
        type: "string"
      ipmiEnabled:
        type: "boolean"
      displayedTags:
        type: "array"
        items:
          type: "object"
          properties: {}
      tags:
        type: "array"
        items:
          type: "string"
      location:
        type: "object"
        properties: {}
      primaryIp:
        type: "string"
      ipmiAddress:
        type: "string"
      serviceMonitors:
        type: "array"
        items:
          type: "string"
      billingInfo:
        type: "object"
        properties: {}
      servicePlan:
        type: "integer"
      lastInvoiceId:
        type: "integer"
      selfProvisioning:
        type: "boolean"
      metadata:
        type: "object"
        properties: {}
    example:
      deviceType: "deviceType"
      metadata: "{}"
      ipmiEnabled: true
      ipmiAddress: "ipmiAddress"
      lastInvoiceId: 2
      deviceId: 0
      isManaged: true
      tags:
      - "tags"
      - "tags"
      serviceMonitors:
      - "serviceMonitors"
      - "serviceMonitors"
      monitorsUp: 6
      powerStatus: "powerStatus"
      hostname: "hostname"
      billingInfo: "{}"
      servicePlan: 5
      isReload: true
      displayedTags:
      - "{}"
      - "{}"
      name: "name"
      primaryIp: "primaryIp"
      hasCancellation: true
      selfProvisioning: true
      monitorsTotal: 1
      managedAlertsTotal: 5
      location: "{}"
      status: "status"
  DeviceUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "A Descriptive Name for this Device"
      hostname:
        type: "string"
        example: "server1.mydomain.com"
    example:
      hostname: "server1.mydomain.com"
      name: "A Descriptive Name for this Device"
  DevicePower:
    type: "object"
    properties:
      powerStatus:
        type: "string"
    example:
      powerStatus: "powerStatus"
  DeviceTag:
    type: "object"
    properties:
      tags:
        type: "array"
        items:
          type: "string"
    example:
      tags:
      - "tags"
      - "tags"
  DeviceIPMIThresholds:
    type: "object"
    required:
    - "thresholds"
    properties:
      thresholds:
        type: "object"
        properties: {}
    example:
      thresholds: "{}"
  UpdateDevicesIPMIThresholds:
    type: "object"
    required:
    - "device_ids"
    - "thresholds"
    properties:
      device_ids:
        type: "array"
        items:
          type: "integer"
      thresholds:
        type: "object"
        properties: {}
  DevicesIPMIThresholds:
    type: "object"
    required:
    - "devices"
    properties:
      devices:
        type: "object"
        properties: {}
    example:
      devices: "{}"
  DeviceIPMIInfo:
    type: "object"
    properties:
      info:
        $ref: "#/definitions/IPMIInfo"
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/IPMISensor"
    example:
      sensors:
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        sensorId: "sensorId"
        status: true
        group: "group"
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        sensorId: "sensorId"
        status: true
        group: "group"
      info:
        fruInventoryDevice: "fruInventoryDevice"
        sdrRepositoryDevice: "sdrRepositoryDevice"
        productId: "productId"
        deviceAvailable: "deviceAvailable"
        deviceSDRs: "deviceSDRs"
        deviceRevision: "deviceRevision"
        manufacturerId: "manufacturerId"
        ipmbEventGenerator: "ipmbEventGenerator"
        deviceId: "deviceId"
        ipmiVersion: "ipmiVersion"
        chassisDevice: "chassisDevice"
        selDevice: "selDevice"
        ipmbEventReceiver: "ipmbEventReceiver"
        bridge: "bridge"
        auxFirmwareRevInfo: "auxFirmwareRevInfo"
        sensorDevice: "sensorDevice"
        firmwareRevision: "firmwareRevision"
  IPMIInfo:
    type: "object"
    properties:
      selDevice:
        type: "string"
      ipmbEventReceiver:
        type: "string"
      productId:
        type: "string"
      sensorDevice:
        type: "string"
      deviceAvailable:
        type: "string"
      fruInventoryDevice:
        type: "string"
      ipmiVersion:
        type: "string"
      bridge:
        type: "string"
      deviceRevision:
        type: "string"
      deviceId:
        type: "string"
      firmwareRevision:
        type: "string"
      deviceSDRs:
        type: "string"
      sdrRepositoryDevice:
        type: "string"
      chassisDevice:
        type: "string"
      manufacturerId:
        type: "string"
      auxFirmwareRevInfo:
        type: "string"
      ipmbEventGenerator:
        type: "string"
    example:
      fruInventoryDevice: "fruInventoryDevice"
      sdrRepositoryDevice: "sdrRepositoryDevice"
      productId: "productId"
      deviceAvailable: "deviceAvailable"
      deviceSDRs: "deviceSDRs"
      deviceRevision: "deviceRevision"
      manufacturerId: "manufacturerId"
      ipmbEventGenerator: "ipmbEventGenerator"
      deviceId: "deviceId"
      ipmiVersion: "ipmiVersion"
      chassisDevice: "chassisDevice"
      selDevice: "selDevice"
      ipmbEventReceiver: "ipmbEventReceiver"
      bridge: "bridge"
      auxFirmwareRevInfo: "auxFirmwareRevInfo"
      sensorDevice: "sensorDevice"
      firmwareRevision: "firmwareRevision"
  IPMISensor:
    type: "object"
    properties:
      units:
        type: "string"
      reading:
        type: "number"
      name:
        type: "string"
      sensorId:
        type: "string"
      status:
        type: "boolean"
      group:
        type: "string"
    example:
      name: "name"
      reading: 0.80082819046101150206595775671303272247314453125
      units: "units"
      sensorId: "sensorId"
      status: true
      group: "group"
  IPMILoginData:
    type: "object"
    properties:
      password:
        type: "string"
      host:
        type: "string"
      drivertype:
        type: "string"
      username:
        type: "string"
    example:
      password: "password"
      host: "host"
      drivertype: "drivertype"
      username: "username"
  IPMIValidLogin:
    type: "object"
    required:
    - "valid"
    properties:
      valid:
        type: "boolean"
    example:
      valid: true
  DeviceInitialCreds:
    type: "object"
    properties:
      password:
        type: "string"
      lockerUrl:
        type: "string"
      port:
        type: "integer"
      user:
        type: "string"
    example:
      password: "password"
      lockerUrl: "lockerUrl"
      port: 0
      user: "user"
  DeviceIPMIWhitelistIP:
    type: "object"
    required:
    - "custIp"
    properties:
      custIp:
        type: "string"
  DomainCreate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  DomainReturn:
    type: "object"
    required:
    - "directsTo"
    - "domainId"
    - "name"
    properties:
      summary:
        type: "object"
        properties: {}
      name:
        type: "string"
      directsTo:
        type: "string"
      domainId:
        type: "integer"
    example:
      summary: "{}"
      directsTo: "directsTo"
      name: "name"
      domainId: 0
  ARecordCreate:
    type: "object"
    required:
    - "name"
    - "ttl"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
    example:
      address: "address"
      name: "name"
      ttl: 0
  ARecordReturn:
    type: "object"
    required:
    - "addresses"
    - "domainId"
    - "name"
    - "ttl"
    - "type"
    properties:
      ttl:
        type: "integer"
      type:
        type: "string"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/RecordValue"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      addresses:
      - address: "address"
        id: 6
      - address: "address"
        id: 6
      name: "name"
      type: "type"
      ttl: 0
      domainId: 1
  RecordValue:
    type: "object"
    properties:
      address:
        type: "string"
      id:
        type: "integer"
    example:
      address: "address"
      id: 6
  SingleARecordReturn:
    type: "object"
    required:
    - "domainId"
    - "name"
    - "ttl"
    - "type"
    properties:
      id:
        type: "integer"
      ttl:
        type: "integer"
      address:
        type: "string"
      type:
        type: "string"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      address: "address"
      name: "name"
      id: 0
      type: "type"
      ttl: 6
      domainId: 1
  ARecordUpdate:
    type: "object"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
    example:
      address: "address"
      name: "name"
      ttl: 0
  AAAARecordCreate:
    type: "object"
    required:
    - "address"
    - "name"
    - "ttl"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
  AAAARecordReturn:
    type: "object"
    required:
    - "addresses"
    - "domainId"
    - "name"
    - "ttl"
    - "type"
    properties:
      ttl:
        type: "integer"
      type:
        type: "string"
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/RecordValue"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      addresses:
      - address: "address"
        id: 6
      - address: "address"
        id: 6
      name: "name"
      type: "type"
      ttl: 0
      domainId: 6
  AAAARecordUpdate:
    type: "object"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
  SingleMXRecordCreate:
    type: "object"
    required:
    - "exchange"
    - "name"
    - "preference"
    - "ttl"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      preference:
        type: "integer"
      exchange:
        type: "string"
  MXRecordReturn:
    type: "object"
    required:
    - "domainId"
    - "mx"
    - "name"
    - "ttl"
    - "type"
    properties:
      mx:
        type: "array"
        items:
          $ref: "#/definitions/MXValue"
      ttl:
        type: "integer"
      type:
        type: "string"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      name: "name"
      mx:
      - preference: 0
        exchange: "exchange"
        id: 6
      - preference: 0
        exchange: "exchange"
        id: 6
      type: "type"
      ttl: 1
      domainId: 5
  MXValue:
    type: "object"
    required:
    - "exchange"
    - "id"
    - "preference"
    properties:
      exchange:
        type: "string"
      preference:
        type: "integer"
      id:
        type: "integer"
    example:
      preference: 0
      exchange: "exchange"
      id: 6
  SingleMXRecordReturn:
    type: "object"
    required:
    - "domainId"
    - "exchange"
    - "id"
    - "name"
    - "preference"
    - "ttl"
    - "type"
    properties:
      preference:
        type: "integer"
      id:
        type: "integer"
      ttl:
        type: "integer"
      type:
        type: "string"
      exchange:
        type: "string"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      preference: 0
      name: "name"
      exchange: "exchange"
      id: 6
      type: "type"
      ttl: 1
      domainId: 5
  SingleMXRecordUpdate:
    type: "object"
    required:
    - "exchange"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      preference:
        type: "integer"
      exchange:
        type: "string"
  Inventory:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Stock"
  Stock:
    type: "object"
    properties:
      annually_location_premium:
        type: "number"
      product_disabled_billing_periods:
        type: "array"
        items:
          type: "string"
      product_gpu:
        type: "string"
      quarterly_location_premium:
        type: "number"
      hourly_location_premium:
        type: "number"
      product_original_price:
        type: "number"
      product_name:
        type: "string"
      triennial_location_premium:
        type: "number"
      product_cpu_cores:
        type: "string"
      semi_annually_location_premium:
        type: "number"
      core:
        type: "boolean"
      product_cpu:
        type: "string"
      monthly_location_premium:
        type: "number"
      product_biennial_price:
        type: "number"
      product_hourly_price:
        type: "number"
      product_bandwidth:
        type: "string"
      product_triennial_price:
        type: "number"
      product_drive:
        type: "string"
      product_on_sale:
        type: "boolean"
      product_memory:
        type: "string"
      stock:
        type: "string"
      product_quarterly_price:
        type: "number"
      product_semi_annually_price:
        type: "number"
      product_id:
        type: "integer"
      edge:
        type: "boolean"
      product_annually_price:
        type: "number"
      product_display_price:
        type: "number"
      biennial_location_premium:
        type: "number"
      product_monthly_price:
        type: "number"
      data_center:
        type: "string"
    example:
      product_gpu: "product_gpu"
      product_cpu: "product_cpu"
      biennial_location_premium: 6.8468526983526398765889098285697400569915771484375
      product_memory: "product_memory"
      edge: true
      product_monthly_price: 7.4577447736837658709418974467553198337554931640625
      product_hourly_price: 3.61607674925191080461672754609026014804840087890625
      quarterly_location_premium: 6.02745618307040320615897144307382404804229736328125
      product_id: 1
      semi_annually_location_premium: 2.3021358869347654518833223846741020679473876953125
      stock: "stock"
      hourly_location_premium: 1.46581298050294517310021547018550336360931396484375
      data_center: "data_center"
      product_name: "product_name"
      product_annually_price: 1.024645700144157789424070870154537260532379150390625
      triennial_location_premium: 5.63737665663332876420099637471139430999755859375
      product_disabled_billing_periods:
      - "product_disabled_billing_periods"
      - "product_disabled_billing_periods"
      core: true
      product_triennial_price: 2.027123023002321833274663731572218239307403564453125
      product_drive: "product_drive"
      product_cpu_cores: "product_cpu_cores"
      product_quarterly_price: 4.1456080298839363962315474054776132106781005859375
      product_bandwidth: "product_bandwidth"
      annually_location_premium: 0.80082819046101150206595775671303272247314453125
      product_on_sale: true
      monthly_location_premium: 7.061401241503109105224211816675961017608642578125
      product_biennial_price: 9.301444243932575517419536481611430644989013671875
      product_display_price: 1.489415909854170383397331534069962799549102783203125
      product_original_price: 5.962133916683182377482808078639209270477294921875
      product_semi_annually_price: 7.3862819483858839220147274318151175975799560546875
  Location:
    type: "object"
    properties:
      location:
        $ref: "#/definitions/CityStateCountry"
      edge:
        type: "boolean"
      core:
        type: "boolean"
      code:
        type: "string"
    example:
      core: true
      edge: true
      code: "code"
      location:
        country: "country"
        city: "city"
        state: "state"
  CityStateCountry:
    type: "object"
    properties:
      country:
        type: "string"
      state:
        type: "string"
      city:
        type: "string"
    example:
      country: "country"
      city: "city"
      state: "state"
  Order-dump:
    type: "object"
    properties:
      owner:
        type: "string"
      total:
        type: "number"
      status:
        type: "string"
      orderId:
        type: "integer"
      info:
        type: "object"
        properties: {}
    example:
      owner: "owner"
      total: 0.80082819046101150206595775671303272247314453125
      orderId: 6
      status: "status"
      info: "{}"
  Permission:
    type: "object"
    required:
    - "permissions"
    - "userId"
    properties:
      userId:
        type: "integer"
      permissions:
        type: "array"
        items:
          type: "string"
    example:
      permissions:
      - "permissions"
      - "permissions"
      userId: 0
  PermissionReturn:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  ProductInfo:
    type: "object"
    properties:
      annually_location_premium:
        type: "number"
      product_disabled_billing_periods:
        type: "array"
        items:
          type: "string"
      product_gpu:
        type: "string"
      quarterly_location_premium:
        type: "number"
      hourly_location_premium:
        type: "number"
      product_original_price:
        type: "number"
      product_name:
        type: "string"
      triennial_location_premium:
        type: "number"
      product_cpu_cores:
        type: "string"
      semi_annually_location_premium:
        type: "number"
      core:
        type: "boolean"
      product_cpu:
        type: "string"
      monthly_location_premium:
        type: "number"
      product_biennial_price:
        type: "number"
      product_hourly_price:
        type: "number"
      product_bandwidth:
        type: "string"
      product_triennial_price:
        type: "number"
      product_drive:
        type: "string"
      product_on_sale:
        type: "boolean"
      product_memory:
        type: "string"
      stock:
        type: "string"
      product_quarterly_price:
        type: "number"
      product_semi_annually_price:
        type: "number"
      product_id:
        type: "integer"
      edge:
        type: "boolean"
      product_annually_price:
        type: "number"
      product_display_price:
        type: "number"
      biennial_location_premium:
        type: "number"
      product_monthly_price:
        type: "number"
      data_center:
        type: "string"
    example:
      product_gpu: "product_gpu"
      product_cpu: "product_cpu"
      biennial_location_premium: 6.8468526983526398765889098285697400569915771484375
      product_memory: "product_memory"
      edge: true
      product_monthly_price: 7.4577447736837658709418974467553198337554931640625
      product_hourly_price: 3.61607674925191080461672754609026014804840087890625
      quarterly_location_premium: 6.02745618307040320615897144307382404804229736328125
      product_id: 1
      semi_annually_location_premium: 2.3021358869347654518833223846741020679473876953125
      stock: "stock"
      hourly_location_premium: 1.46581298050294517310021547018550336360931396484375
      data_center: "data_center"
      product_name: "product_name"
      product_annually_price: 1.024645700144157789424070870154537260532379150390625
      triennial_location_premium: 5.63737665663332876420099637471139430999755859375
      product_disabled_billing_periods:
      - "product_disabled_billing_periods"
      - "product_disabled_billing_periods"
      core: true
      product_triennial_price: 2.027123023002321833274663731572218239307403564453125
      product_drive: "product_drive"
      product_cpu_cores: "product_cpu_cores"
      product_quarterly_price: 4.1456080298839363962315474054776132106781005859375
      product_bandwidth: "product_bandwidth"
      annually_location_premium: 0.80082819046101150206595775671303272247314453125
      product_on_sale: true
      monthly_location_premium: 7.061401241503109105224211816675961017608642578125
      product_biennial_price: 9.301444243932575517419536481611430644989013671875
      product_display_price: 1.489415909854170383397331534069962799549102783203125
      product_original_price: 5.962133916683182377482808078639209270477294921875
      product_semi_annually_price: 7.3862819483858839220147274318151175975799560546875
  Options:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Option"
  Option:
    type: "object"
    properties:
      expressions:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
      monthlyPrice:
        type: "number"
      name:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      currency:
        type: "string"
    example:
      name: "name"
      currency: "currency"
      id: 0
      monthlyPrice: 6.02745618307040320615897144307382404804229736328125
      expressions:
      - "expressions"
      - "expressions"
      tags:
      - "tags"
      - "tags"
  ProductOption:
    type: "object"
    properties:
      productId:
        type: "integer"
      options:
        type: "object"
        properties: {}
      pricing:
        type: "object"
        properties: {}
    example:
      productId: 0
      options: "{}"
      pricing: "{}"
  Deployment:
    type: "object"
    properties:
      price:
        type: "number"
      orderNumber:
        type: "string"
      deploymentName:
        type: "string"
      startedProvisioning:
        type: "boolean"
      deploymentId:
        type: "integer"
      deploymentConfiguration:
        type: "array"
        items:
          type: "object"
          properties: {}
      empty:
        type: "boolean"
    example:
      orderNumber: "orderNumber"
      deploymentConfiguration:
      - "{}"
      - "{}"
      price: 0.80082819046101150206595775671303272247314453125
      deploymentId: 6
      deploymentName: "deploymentName"
      startedProvisioning: true
      empty: true
  DeploymentCustomization:
    type: "object"
    required:
    - "hostnames"
    - "operatingSystem"
    - "productId"
    properties:
      productId:
        type: "integer"
      options:
        type: "array"
        items:
          type: "integer"
      hostnames:
        type: "array"
        items:
          type: "string"
      quantity:
        type: "integer"
      locationCode:
        type: "string"
        default: ""
      billingPeriod:
        type: "string"
        description: "must be one of ['monthly', 'quarterly', 'semi-annually', 'annually',\
          \ 'biennial', 'triennial', 'hourly']"
        default: "monthly"
      operatingSystem:
        type: "string"
        description: "Operating System's Name or ID"
      publicSshKeyId:
        type: "integer"
      additionalNotes:
        type: "array"
        items:
          type: "string"
    example:
      quantity: 1
      productId: 0
      billingPeriod: "monthly"
      options:
      - 6
      - 6
      hostnames:
      - "hostnames"
      - "hostnames"
      locationCode: "locationCode"
      additionalNotes:
      - "additionalNotes"
      - "additionalNotes"
      operatingSystem: "operatingSystem"
      publicSshKeyId: 5
  DeploymentStart:
    type: "object"
    required:
    - "billingInfo"
    properties:
      billingInfo:
        type: "integer"
      script:
        type: "string"
    example:
      billingInfo: 0
      script: "script"
  Service-dump:
    type: "object"
    properties:
      serviceId:
        type: "integer"
      created:
        type: "integer"
      billedPrice:
        type: "number"
      billedPricePerPeriod:
        type: "number"
      serviceCost:
        type: "number"
      lastRenew:
        type: "integer"
      renewDate:
        type: "integer"
      quantity:
        type: "number"
      orderId:
        type: "integer"
      status:
        type: "string"
      period:
        type: "string"
      discount:
        type: "number"
      discountType:
        type: "string"
      discountedCost:
        type: "number"
      serviceDiscount:
        type: "number"
      serviceDiscountPerPeriod:
        type: "number"
      ipAddress:
        type: "string"
      cancelAfter:
        type: "integer"
      startDate:
        type: "integer"
      endDate:
        type: "integer"
      serviceOptions:
        type: "array"
        items:
          $ref: "#/definitions/ServiceOption"
      serviceDevices:
        type: "array"
        items:
          type: "object"
          properties: {}
      childServices:
        type: "array"
        items:
          type: "object"
          properties: {}
      productId:
        type: "integer"
      productName:
        type: "string"
      reseller:
        type: "string"
      serviceType:
        type: "string"
      contractTerm:
        type: "integer"
      billingInfoId:
        type: "integer"
      colocationCharge:
        type: "number"
    example:
      serviceType: "serviceType"
      discountedCost: 4.1456080298839363962315474054776132106781005859375
      orderId: 3
      endDate: 6
      billingInfoId: 9
      discount: 2.027123023002321833274663731572218239307403564453125
      serviceDiscountPerPeriod: 1.231513536777255612975068288506008684635162353515625
      productName: "productName"
      lastRenew: 2
      colocationCharge: 9.3693102714106686335071572102606296539306640625
      discountType: "discountType"
      serviceId: 0
      renewDate: 7
      serviceDevices:
      - "{}"
      - "{}"
      period: "period"
      billedPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 9.301444243932575517419536481611430644989013671875
      productId: 4
      serviceCost: 5.63737665663332876420099637471139430999755859375
      created: 6
      cancelAfter: 1
      ipAddress: "ipAddress"
      reseller: "reseller"
      serviceOptions:
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      childServices:
      - "{}"
      - "{}"
      serviceDiscount: 7.3862819483858839220147274318151175975799560546875
      contractTerm: 5
      startDate: 1
      billedPricePerPeriod: 5.962133916683182377482808078639209270477294921875
      status: "status"
  ServiceOption:
    type: "object"
    properties:
      serviceOptionId:
        type: "integer"
      name:
        type: "string"
      optionId:
        type: "integer"
      upgradeName:
        type: "string"
      groupName:
        type: "string"
      invoiceHide:
        type: "string"
    example:
      serviceOptionId: 7
      groupName: "groupName"
      invoiceHide: "invoiceHide"
      name: "name"
      optionId: 1
      upgradeName: "upgradeName"
  SshKey:
    type: "object"
    required:
    - "name"
    - "publicKey"
    properties:
      name:
        type: "string"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  SshKeyResponse:
    type: "object"
    properties:
      name:
        type: "string"
      sshKeyId:
        type: "integer"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
      sshKeyId: 0
  SshKeyUpdate:
    type: "object"
    properties:
      name:
        type: "string"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  VlanCreate:
    type: "object"
    properties:
      deviceIds:
        type: "array"
        items:
          type: "integer"
      description:
        type: "string"
    example:
      deviceIds:
      - 0
      - 0
      description: "description"
  Vlan:
    type: "object"
    properties:
      vlanNum:
        type: "integer"
      vlanId:
        type: "integer"
      facilityCode:
        type: "string"
      vlanTag:
        type: "integer"
      deviceIds:
        type: "array"
        items:
          type: "integer"
      pendingDevices:
        type: "array"
        items:
          type: "integer"
      description:
        type: "string"
    example:
      facilityCode: "facilityCode"
      pendingDevices:
      - 5
      - 5
      deviceIds:
      - 5
      - 5
      vlanTag: 1
      vlanId: 6
      vlanNum: 0
      description: "description"
  WebhookEvent:
    type: "object"
    required:
    - "desc"
    - "name"
    properties:
      name:
        type: "string"
      desc:
        type: "string"
    example:
      name: "name"
      desc: "desc"
  WebhookCreate:
    type: "object"
    required:
    - "event"
    - "url"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        properties: {}
    example:
      headers: "{}"
      name: "My Webhook"
      event: "event"
      url: "url"
  Webhook:
    type: "object"
    required:
    - "event"
    - "name"
    - "url"
    - "webhookId"
    properties:
      webhookId:
        type: "integer"
      name:
        type: "string"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        properties: {}
    example:
      headers: "{}"
      webhookId: 0
      name: "name"
      event: "event"
      url: "url"
  WebhookUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        properties: {}
    example:
      headers: "{}"
      name: "My Webhook"
      event: "event"
      url: "url"
responses:
  MaskError:
    description: "When any error occurs on mask"
  ParseError:
    description: "When a mask can't be parsed"
